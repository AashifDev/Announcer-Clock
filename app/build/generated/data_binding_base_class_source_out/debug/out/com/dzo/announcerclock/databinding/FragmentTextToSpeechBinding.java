// Generated by view binder compiler. Do not edit!
package com.dzo.announcerclock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dzo.announcerclock.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTextToSpeechBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SwitchMaterial disableDuringMusic;

  @NonNull
  public final SwitchMaterial disableWhilePhoneCalls;

  @NonNull
  public final SwitchMaterial enableTimeSpeaking;

  @NonNull
  public final AppCompatImageView imgCall;

  @NonNull
  public final AppCompatImageView imgMusic;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompatSound1;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompatSound2;

  @NonNull
  public final MaterialCardView notificaitonSettingLayout;

  @NonNull
  public final FloatingActionButton play;

  @NonNull
  public final AppCompatSpinner selectedLangSpinner;

  @NonNull
  public final AppCompatSpinner selectedVoiceSpinner;

  @NonNull
  public final MaterialCardView ttsLayout;

  @NonNull
  public final AppCompatTextView txtDisableDuringCall;

  @NonNull
  public final AppCompatTextView txtDisableDuringMusic;

  @NonNull
  public final AppCompatTextView txtNotificationSetting;

  @NonNull
  public final AppCompatTextView txtSelectLanguage;

  @NonNull
  public final AppCompatTextView txtSoundSetting;

  @NonNull
  public final AppCompatTextView txtTimeSpeaking;

  @NonNull
  public final AppCompatTextView txtVoiceGender;

  private FragmentTextToSpeechBinding(@NonNull ConstraintLayout rootView,
      @NonNull SwitchMaterial disableDuringMusic, @NonNull SwitchMaterial disableWhilePhoneCalls,
      @NonNull SwitchMaterial enableTimeSpeaking, @NonNull AppCompatImageView imgCall,
      @NonNull AppCompatImageView imgMusic, @NonNull LinearLayoutCompat linearLayoutCompat,
      @NonNull LinearLayoutCompat linearLayoutCompatSound1,
      @NonNull LinearLayoutCompat linearLayoutCompatSound2,
      @NonNull MaterialCardView notificaitonSettingLayout, @NonNull FloatingActionButton play,
      @NonNull AppCompatSpinner selectedLangSpinner, @NonNull AppCompatSpinner selectedVoiceSpinner,
      @NonNull MaterialCardView ttsLayout, @NonNull AppCompatTextView txtDisableDuringCall,
      @NonNull AppCompatTextView txtDisableDuringMusic,
      @NonNull AppCompatTextView txtNotificationSetting,
      @NonNull AppCompatTextView txtSelectLanguage, @NonNull AppCompatTextView txtSoundSetting,
      @NonNull AppCompatTextView txtTimeSpeaking, @NonNull AppCompatTextView txtVoiceGender) {
    this.rootView = rootView;
    this.disableDuringMusic = disableDuringMusic;
    this.disableWhilePhoneCalls = disableWhilePhoneCalls;
    this.enableTimeSpeaking = enableTimeSpeaking;
    this.imgCall = imgCall;
    this.imgMusic = imgMusic;
    this.linearLayoutCompat = linearLayoutCompat;
    this.linearLayoutCompatSound1 = linearLayoutCompatSound1;
    this.linearLayoutCompatSound2 = linearLayoutCompatSound2;
    this.notificaitonSettingLayout = notificaitonSettingLayout;
    this.play = play;
    this.selectedLangSpinner = selectedLangSpinner;
    this.selectedVoiceSpinner = selectedVoiceSpinner;
    this.ttsLayout = ttsLayout;
    this.txtDisableDuringCall = txtDisableDuringCall;
    this.txtDisableDuringMusic = txtDisableDuringMusic;
    this.txtNotificationSetting = txtNotificationSetting;
    this.txtSelectLanguage = txtSelectLanguage;
    this.txtSoundSetting = txtSoundSetting;
    this.txtTimeSpeaking = txtTimeSpeaking;
    this.txtVoiceGender = txtVoiceGender;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTextToSpeechBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTextToSpeechBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_text_to_speech, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTextToSpeechBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.disableDuringMusic;
      SwitchMaterial disableDuringMusic = ViewBindings.findChildViewById(rootView, id);
      if (disableDuringMusic == null) {
        break missingId;
      }

      id = R.id.disableWhilePhoneCalls;
      SwitchMaterial disableWhilePhoneCalls = ViewBindings.findChildViewById(rootView, id);
      if (disableWhilePhoneCalls == null) {
        break missingId;
      }

      id = R.id.enableTimeSpeaking;
      SwitchMaterial enableTimeSpeaking = ViewBindings.findChildViewById(rootView, id);
      if (enableTimeSpeaking == null) {
        break missingId;
      }

      id = R.id.imgCall;
      AppCompatImageView imgCall = ViewBindings.findChildViewById(rootView, id);
      if (imgCall == null) {
        break missingId;
      }

      id = R.id.imgMusic;
      AppCompatImageView imgMusic = ViewBindings.findChildViewById(rootView, id);
      if (imgMusic == null) {
        break missingId;
      }

      id = R.id.linearLayoutCompat;
      LinearLayoutCompat linearLayoutCompat = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompat == null) {
        break missingId;
      }

      id = R.id.linearLayoutCompatSound1;
      LinearLayoutCompat linearLayoutCompatSound1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompatSound1 == null) {
        break missingId;
      }

      id = R.id.linearLayoutCompatSound2;
      LinearLayoutCompat linearLayoutCompatSound2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompatSound2 == null) {
        break missingId;
      }

      id = R.id.notificaitonSettingLayout;
      MaterialCardView notificaitonSettingLayout = ViewBindings.findChildViewById(rootView, id);
      if (notificaitonSettingLayout == null) {
        break missingId;
      }

      id = R.id.play;
      FloatingActionButton play = ViewBindings.findChildViewById(rootView, id);
      if (play == null) {
        break missingId;
      }

      id = R.id.selectedLangSpinner;
      AppCompatSpinner selectedLangSpinner = ViewBindings.findChildViewById(rootView, id);
      if (selectedLangSpinner == null) {
        break missingId;
      }

      id = R.id.selectedVoiceSpinner;
      AppCompatSpinner selectedVoiceSpinner = ViewBindings.findChildViewById(rootView, id);
      if (selectedVoiceSpinner == null) {
        break missingId;
      }

      id = R.id.ttsLayout;
      MaterialCardView ttsLayout = ViewBindings.findChildViewById(rootView, id);
      if (ttsLayout == null) {
        break missingId;
      }

      id = R.id.txtDisableDuringCall;
      AppCompatTextView txtDisableDuringCall = ViewBindings.findChildViewById(rootView, id);
      if (txtDisableDuringCall == null) {
        break missingId;
      }

      id = R.id.txtDisableDuringMusic;
      AppCompatTextView txtDisableDuringMusic = ViewBindings.findChildViewById(rootView, id);
      if (txtDisableDuringMusic == null) {
        break missingId;
      }

      id = R.id.txtNotificationSetting;
      AppCompatTextView txtNotificationSetting = ViewBindings.findChildViewById(rootView, id);
      if (txtNotificationSetting == null) {
        break missingId;
      }

      id = R.id.txtSelectLanguage;
      AppCompatTextView txtSelectLanguage = ViewBindings.findChildViewById(rootView, id);
      if (txtSelectLanguage == null) {
        break missingId;
      }

      id = R.id.txtSoundSetting;
      AppCompatTextView txtSoundSetting = ViewBindings.findChildViewById(rootView, id);
      if (txtSoundSetting == null) {
        break missingId;
      }

      id = R.id.txtTimeSpeaking;
      AppCompatTextView txtTimeSpeaking = ViewBindings.findChildViewById(rootView, id);
      if (txtTimeSpeaking == null) {
        break missingId;
      }

      id = R.id.txtVoiceGender;
      AppCompatTextView txtVoiceGender = ViewBindings.findChildViewById(rootView, id);
      if (txtVoiceGender == null) {
        break missingId;
      }

      return new FragmentTextToSpeechBinding((ConstraintLayout) rootView, disableDuringMusic,
          disableWhilePhoneCalls, enableTimeSpeaking, imgCall, imgMusic, linearLayoutCompat,
          linearLayoutCompatSound1, linearLayoutCompatSound2, notificaitonSettingLayout, play,
          selectedLangSpinner, selectedVoiceSpinner, ttsLayout, txtDisableDuringCall,
          txtDisableDuringMusic, txtNotificationSetting, txtSelectLanguage, txtSoundSetting,
          txtTimeSpeaking, txtVoiceGender);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
