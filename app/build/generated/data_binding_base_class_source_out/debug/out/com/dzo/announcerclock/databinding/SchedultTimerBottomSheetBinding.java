// Generated by view binder compiler. Do not edit!
package com.dzo.announcerclock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dzo.announcerclock.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SchedultTimerBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final ConstraintLayout bgEnd;

  @NonNull
  public final ConstraintLayout bgStart;

  @NonNull
  public final AppCompatImageView imgEnd;

  @NonNull
  public final AppCompatImageView imgStart;

  @NonNull
  public final AppCompatButton saveSchedule;

  @NonNull
  public final LinearLayoutCompat setEndTime;

  @NonNull
  public final LinearLayoutCompat setStartTime;

  @NonNull
  public final AppCompatTextView txtEnd;

  @NonNull
  public final AppCompatTextView txtEndTime;

  @NonNull
  public final AppCompatTextView txtRepeatEvery;

  @NonNull
  public final AppCompatTextView txtSetEndTime;

  @NonNull
  public final AppCompatTextView txtSetRepeatEveryMinute;

  @NonNull
  public final AppCompatTextView txtSetStartTime;

  @NonNull
  public final AppCompatTextView txtStart;

  @NonNull
  public final AppCompatTextView txtStartTime;

  private SchedultTimerBottomSheetBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull ConstraintLayout bgEnd, @NonNull ConstraintLayout bgStart,
      @NonNull AppCompatImageView imgEnd, @NonNull AppCompatImageView imgStart,
      @NonNull AppCompatButton saveSchedule, @NonNull LinearLayoutCompat setEndTime,
      @NonNull LinearLayoutCompat setStartTime, @NonNull AppCompatTextView txtEnd,
      @NonNull AppCompatTextView txtEndTime, @NonNull AppCompatTextView txtRepeatEvery,
      @NonNull AppCompatTextView txtSetEndTime, @NonNull AppCompatTextView txtSetRepeatEveryMinute,
      @NonNull AppCompatTextView txtSetStartTime, @NonNull AppCompatTextView txtStart,
      @NonNull AppCompatTextView txtStartTime) {
    this.rootView = rootView;
    this.bgEnd = bgEnd;
    this.bgStart = bgStart;
    this.imgEnd = imgEnd;
    this.imgStart = imgStart;
    this.saveSchedule = saveSchedule;
    this.setEndTime = setEndTime;
    this.setStartTime = setStartTime;
    this.txtEnd = txtEnd;
    this.txtEndTime = txtEndTime;
    this.txtRepeatEvery = txtRepeatEvery;
    this.txtSetEndTime = txtSetEndTime;
    this.txtSetRepeatEveryMinute = txtSetRepeatEveryMinute;
    this.txtSetStartTime = txtSetStartTime;
    this.txtStart = txtStart;
    this.txtStartTime = txtStartTime;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static SchedultTimerBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SchedultTimerBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.schedult_timer_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SchedultTimerBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bgEnd;
      ConstraintLayout bgEnd = ViewBindings.findChildViewById(rootView, id);
      if (bgEnd == null) {
        break missingId;
      }

      id = R.id.bgStart;
      ConstraintLayout bgStart = ViewBindings.findChildViewById(rootView, id);
      if (bgStart == null) {
        break missingId;
      }

      id = R.id.imgEnd;
      AppCompatImageView imgEnd = ViewBindings.findChildViewById(rootView, id);
      if (imgEnd == null) {
        break missingId;
      }

      id = R.id.imgStart;
      AppCompatImageView imgStart = ViewBindings.findChildViewById(rootView, id);
      if (imgStart == null) {
        break missingId;
      }

      id = R.id.saveSchedule;
      AppCompatButton saveSchedule = ViewBindings.findChildViewById(rootView, id);
      if (saveSchedule == null) {
        break missingId;
      }

      id = R.id.setEndTime;
      LinearLayoutCompat setEndTime = ViewBindings.findChildViewById(rootView, id);
      if (setEndTime == null) {
        break missingId;
      }

      id = R.id.setStartTime;
      LinearLayoutCompat setStartTime = ViewBindings.findChildViewById(rootView, id);
      if (setStartTime == null) {
        break missingId;
      }

      id = R.id.txtEnd;
      AppCompatTextView txtEnd = ViewBindings.findChildViewById(rootView, id);
      if (txtEnd == null) {
        break missingId;
      }

      id = R.id.txtEndTime;
      AppCompatTextView txtEndTime = ViewBindings.findChildViewById(rootView, id);
      if (txtEndTime == null) {
        break missingId;
      }

      id = R.id.txtRepeatEvery;
      AppCompatTextView txtRepeatEvery = ViewBindings.findChildViewById(rootView, id);
      if (txtRepeatEvery == null) {
        break missingId;
      }

      id = R.id.txtSetEndTime;
      AppCompatTextView txtSetEndTime = ViewBindings.findChildViewById(rootView, id);
      if (txtSetEndTime == null) {
        break missingId;
      }

      id = R.id.txtSetRepeatEveryMinute;
      AppCompatTextView txtSetRepeatEveryMinute = ViewBindings.findChildViewById(rootView, id);
      if (txtSetRepeatEveryMinute == null) {
        break missingId;
      }

      id = R.id.txtSetStartTime;
      AppCompatTextView txtSetStartTime = ViewBindings.findChildViewById(rootView, id);
      if (txtSetStartTime == null) {
        break missingId;
      }

      id = R.id.txtStart;
      AppCompatTextView txtStart = ViewBindings.findChildViewById(rootView, id);
      if (txtStart == null) {
        break missingId;
      }

      id = R.id.txtStartTime;
      AppCompatTextView txtStartTime = ViewBindings.findChildViewById(rootView, id);
      if (txtStartTime == null) {
        break missingId;
      }

      return new SchedultTimerBottomSheetBinding((LinearLayoutCompat) rootView, bgEnd, bgStart,
          imgEnd, imgStart, saveSchedule, setEndTime, setStartTime, txtEnd, txtEndTime,
          txtRepeatEvery, txtSetEndTime, txtSetRepeatEveryMinute, txtSetStartTime, txtStart,
          txtStartTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
